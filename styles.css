html {
	/* Light mode colors */
	--cl-text: #111;
	--cl-text-neutral: #666;
	--cl-background: #fff;
	--cl-emoji-brightness: 0;

	/* Dark mode colors */
	--cd-text: #fff;
	--cd-text-neutral: #bbb;
	--cd-background: #111;
	--cd-emoji-brightness: 10;
}

html:where(:not([data-color-scheme])),
html:where([data-color-scheme="light"]) {
	--c-text: var(--cl-text);
	--c-text-neutral: var(--cl-text-neutral);
	--c-background: var(--cl-background);
	--emoji-brightness: var(--cl-emoji-brightness);
}

html:where([data-color-scheme="dark"]) {
	--c-text: var(--cd-text);
	--c-text-neutral: var(--cd-text-neutral);
	--c-background: var(--cd-background);
	--emoji-brightness: var(--cd-emoji-brightness);
}

@media (prefers-color-scheme: light) {
	html:where(:not([data-color-scheme])) {
		--c-text: var(--cl-text);
		--c-text-neutral: var(--cl-text-neutral);
		--c-background: var(--cl-background);
		--emoji-brightness: var(--cl-emoji-brightness);
	}
}

@media (prefers-color-scheme: dark) {
	html:where(:not([data-color-scheme])) {
		--c-text: var(--cd-text);
		--c-text-neutral: var(--cd-text-neutral);
		--c-background: var(--cd-background);
		--emoji-brightness: var(--cd-emoji-brightness);
	}
}

*,
*::before,
*::after {
	/* Shoutout to IE6 */
	box-sizing: border-box;
}

::selection {
	color: var(--c-background);
	background-color: var(--c-text);
}

:focus {
	outline: 0.125em solid var(--c-text);
	outline-offset: 0.125em;
}

html {
	font-size: 1em;
	line-height: 1.5;
	font-family: monospace;
	color: var(--c-text);
	background-color: var(--c-background);
}

body {
	margin: 2rem;
}

blockquote,
details,
h2,
h3,
hr,
p,
ul {
	margin-block: 0;

	&:where(:not(:first-child)) {
		margin-block-start: 1rem;
	}
}

h2 {
	padding-block-end: 0.5rem;
	border-block-end: 0.5rem solid var(--c-text);
}

mark {
	background-color: transparent;
	color: currentColor;
	outline: 2px dotted;
	outline-offset: 2px;
	font-size: 0.8em;
}

a {
	color: currentColor;
}

a[href^="https://"]::after {
	/* removes underline */
	display: inline-block;
	/* makes emoji black (0%) or white (1000%; yes, that's 1_000%) */
	filter: brightness(var(--emoji-brightness));
	padding-inline-start: 0.3em;
	position: relative;
	inset-block-end: 0.3em;
	font-size: 0.8em;
}

a[href^="https://mastodon.social/"]::after {
	content: '🐘';
}

img {
	display: block;
	inline-size: 100%;
	block-size: auto;
}

hr {
	inline-size: 100%;
	border-block-start: 0.5rem solid var(--c-text);
}

ul {
	padding-inline-start: 1.5em;

	ul {
		margin-block-start: 0;
	}
}

ul:has(>li ul)>li+li {
	margin-block-start: 0.5em;
}

li {
	padding-inline-start: 1ch;
}

li:nth-child(4n + 1) {
	list-style-type: '◩';
}

li:nth-child(4n + 2) {
	list-style-type: '⬕';
}

li:nth-child(4n + 3) {
	list-style-type: '⬔';
}

li:nth-child(4n + 4) {
	list-style-type: '◪';
}

li {
	li:nth-child(4n + 1) {
		list-style-type: '◰';
	}

	li:nth-child(4n + 2) {
		list-style-type: '◳';
	}

	li:nth-child(4n + 3) {
		list-style-type: '◲';
	}

	li:nth-child(4n + 4) {
		list-style-type: '◱';
	}
}

header {
	display: flex;
	flex-wrap: wrap;
	align-items: baseline;
	gap: 0.25rem 0.5rem;
	padding-block-end: 0.5rem;
	border-block-end: 0.5rem solid var(--c-text);
}

.title {
	display: flex;
	gap: 0.25rem;
}

.title>svg {
	flex-shrink: 0;
	transform: translateY(10%);
	transform-origin: center;
	transition: all 0.2s ease-out;

	&:hover {
		transform: rotate(-15deg) scale(1.5);
		color: red;
	}
}

h1 {
	margin-block-start: 0;
	margin-block-end: 0;
	display: flex;
	align-items: center;
	gap: 0.25rem;
	word-break: break-all;
}

nav {
	display: inline-flex;
	gap: 0.25rem 0.5rem;
	flex-wrap: wrap;
	font-size: 1rem;
}

nav>span::before {
	content: '·';
	margin-inline-end: 0.5rem;
}

article>h3 {
	float: left;
	margin-inline-end: 1.5em;
	font-style: italic;
	font-weight: normal;
	font-size: 1rem;
	color: var(--c-text-neutral);
}

article>h3+* {
	margin-block-start: 0;
}

.banner {
	position: relative;
	margin-block-end: 4em;
	padding: 1em;
	border: 10px dashed;
	text-align: center;
	font-size: 2em;
}

.banner::after {
	content: "";
	position: absolute;
	inset: 0;
	border: 10px solid;
}

content-block {
	max-width: 80em;
	inline-size: 100%;
	margin-inline: auto;
	container-name: content-block;
	container-type: inline-size;
	display: grid;
	align-items: start;
	grid-template-columns: [full-start] minmax(0, 1fr) [content-start] minmax(0, 5fr) [content-end] minmax(0, 1fr) [full-end];
}

content-block:where(:not(:first-child)) {
	margin-block-start: 3rem;
}

content-block>* {
	grid-column: content;
}

content-block>.columns {
	grid-column: full;
}

@container content-block (inline-size < 80em) {
	content-block>* {
		grid-column: full;
	}
}

.stack>*+* {
	margin-block-start: 1rem;
}

.columns {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	gap: 1rem;
}

:where(h1, h2, h3, h4, h5, h6):has(.header-anchor) {
	position: relative;
}

.header-anchor {
	border-block-end: none;
	font-weight: normal;
	text-decoration: none;
}

@container content-block (inline-size < 80em) {
	.header-anchor {
		position: absolute;
		inset-inline-end: 0;
	}
}

@container content-block (inline-size >=80em) {
	.header-anchor {
		--offset-from-heading: 0.25em;
		position: absolute;
		inset-inline-end: calc(100% + var(--offset-from-heading));
		margin-inline-start: calc(-1 * var(--offset-from-heading));

		/* This pseudo element ensures that the gap between the heading and its anchor is part of the anchor’s hit area which in turn allows the gap to be hovered in order to cause the visibility rule below to apply. */
		&::before {
			content: "";
			position: absolute;
			inset-block: 0;
			inset-inline-start: 0;
			inset-inline-end: calc(-1 * var(--offset-from-heading));
		}
	}
}

.header-anchor__icon {
	visibility: hidden;
}

:where(h1, h2, h3, h4, h5, h6):hover,
.header-anchor:focus {
	.header-anchor__icon {
		visibility: visible;
	}
}

.visually-hidden {
	position: absolute;
	overflow: hidden;
	clip: rect(0 0 0 0);
	inline-size: 1px;
	block-size: 1px;
	margin: -1px;
	padding: 0;
	border: 0;
	white-space: nowrap;
}
